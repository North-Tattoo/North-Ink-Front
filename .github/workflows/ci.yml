on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Passo 1: Verificar o código
    - name: Checkout code
      uses: actions/checkout@v2

    # Passo 2: Configurar o Node.js
    - name: Set up Node.js 22
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    # Passo 3: Exibir a versão do Node.js
    - name: Node.js version
      run: node --version

    # Passo 4: Limpar o cache do npm
    - name: Clean npm cache
      run: npm cache clean --force

    # Passo 5: Instalar dependências e construir o projeto
    - name: Install dependencies and build project
      run: |
        cd site
        npm install
        npm run build

    # Passo 6: Compactar os arquivos de build
    - name: Compress build files
      run: |
        cd site
        tar -czf build.tar.gz -C ./dist .

    # Passo 7: Preparar o diretório de destino no servidor EC2
    - name: Prepare target directory on EC2 server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          sudo mkdir -p /usr/share/nginx/html/dist/
          sudo chown -R www-data:www-data /usr/share/nginx/html/dist/
          sudo chmod -R 755 /usr/share/nginx/html/dist/

    # Passo 8: Transferir os arquivos para o servidor EC2
    - name: Transfer build files to EC2 server
      uses: appleboy/scp-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        port: 22
        source: ./site/dist/* # Conteúdo do build
        target: /usr/share/nginx/html/dist/
        debug: true

    # Passo 9: Reiniciar o NGINX
    - name: Restart NGINX on EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          sudo nginx -t
          sudo systemctl restart nginx

    # Passo 10: Verificar o status do NGINX após o reinício
    - name: Check NGINX status
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          sudo systemctl status nginx | head -n 20
